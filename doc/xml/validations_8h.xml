<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="validations_8h" kind="file" language="C++">
    <compoundname>validations.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="validations_8h_1a7c2299e03d8b1fa3be985c055fd42f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isNumeric</definition>
        <argsstring>(char *)</argsstring>
        <name>isNumeric</name>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
<para>This function is used to check for numeric values. </para>
        </briefdescription>
        <detaileddescription>
<para>This Function takes a numeric string s and returns true if every character of s.</para>
<para><simplesect kind="return"><para>Return value is an boolean value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/validations.h" line="22" column="6" declfile="include/validations.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="validations_8h_1ad984f62c5fb06f79fb7c880e86a3cb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool luhn</definition>
        <argsstring>(char *)</argsstring>
        <name>luhn</name>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
<para>This function works on an alogirthm(luhn&apos;s). </para>
        </briefdescription>
        <detaileddescription>
<para>This function implements Luhn&apos;s algorithm: takes a numeric string s and returns true if s represents a syntactically valid credit card number,else returns false.</para>
<para><simplesect kind="return"><para>Return value is an boolean value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/validations.h" line="33" column="6" declfile="include/validations.h" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="validations_8h_1aa5379aa8ec074f63992ba33f6953a83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addDigits</definition>
        <argsstring>(int)</argsstring>
        <name>addDigits</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>This function is used to add digits. </para>
        </briefdescription>
        <detaileddescription>
<para>this function adds the digits in the form of strings.</para>
<para><simplesect kind="return"><para>Returns the sum of the digits of n. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/validations.h" line="44" column="6" declfile="include/validations.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="validations_8h_1a5548d0676557cc4faf704ec7c870ea38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void getInput</definition>
        <argsstring>(char *)</argsstring>
        <name>getInput</name>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
<para>This function is used to read input from user. </para>
        </briefdescription>
        <detaileddescription>
<para>this function reads a string from stdin into buffer until newline or EOF is reached (including leading and trailing whitespace), then null-terminates buffer.</para>
<para><simplesect kind="return"><para>Returns the sum of the digits of n. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/validations.h" line="56" column="6" declfile="include/validations.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="validations_8h_1a468f0bc035d7e6d8856f7e2eae1258a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkPrefix</definition>
        <argsstring>(char *)</argsstring>
        <name>checkPrefix</name>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
<para>This function is used to Check the prefix of credit card. </para>
        </briefdescription>
        <detaileddescription>
<para>This function Checks length of the card number and its first few digits (prefix) to determine the card type. Prints the card type to stdout.</para>
<para><simplesect kind="return"><para>Returns the sum of the digits of n. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/validations.h" line="67" column="6" declfile="include/validations.h" declline="67" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the main file from where all the funtions will be handled by the system. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vamsi Boyella - <ulink url="mailto:vboye103@uottawa.ca">vboye103@uottawa.ca</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Baji Baba Shaik - <ulink url="mailto:bshai015@uottawa.ca">bshai015@uottawa.ca</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Matheen Mohammed- <ulink url="mailto:MatheenMohammed@cmail.carleton.ca">MatheenMohammed@cmail.carleton.ca</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Sangamesh <ulink url="mailto:Patlolla-SangameshwarPatlolla@cmail.carleton.ca">Patlolla-SangameshwarPatlolla@cmail.carleton.ca</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>VALIDATIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VALIDATIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="validations_8h_1a7c2299e03d8b1fa3be985c055fd42f6c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="validations_8h_1a7c2299e03d8b1fa3be985c055fd42f6c" kindref="member">isNumeric</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="33" refid="validations_8h_1ad984f62c5fb06f79fb7c880e86a3cb64" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="validations_8h_1ad984f62c5fb06f79fb7c880e86a3cb64" kindref="member">luhn</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="validations_8h_1aa5379aa8ec074f63992ba33f6953a83d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="validations_8h_1aa5379aa8ec074f63992ba33f6953a83d" kindref="member">addDigits</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="validations_8h_1a5548d0676557cc4faf704ec7c870ea38" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="validations_8h_1a5548d0676557cc4faf704ec7c870ea38" kindref="member">getInput</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="67" refid="validations_8h_1a468f0bc035d7e6d8856f7e2eae1258a5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="validations_8h_1a468f0bc035d7e6d8856f7e2eae1258a5" kindref="member">checkPrefix</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/validations.h"/>
  </compounddef>
</doxygen>
